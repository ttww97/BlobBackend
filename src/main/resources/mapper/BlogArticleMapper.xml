<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.BlogArticleMapper">
    
    <resultMap id="BlogArticleResultMap" type="org.example.entity.BlogArticle">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="summary" property="summary" jdbcType="VARCHAR"/>
        <result column="author_id" property="authorId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="view_count" property="viewCount" jdbcType="INTEGER"/>
        <result column="like_count" property="likeCount" jdbcType="INTEGER"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <select id="findById" resultMap="BlogArticleResultMap">
        SELECT * FROM blog_articles WHERE id = #{id}
    </select>
    
    <select id="findAll" resultMap="BlogArticleResultMap">
        SELECT * FROM blog_articles ORDER BY created_at DESC
    </select>
    
    <select id="findByUserId" resultMap="BlogArticleResultMap">
        SELECT * FROM blog_articles WHERE author_id = #{userId} ORDER BY created_at DESC
    </select>
    
    <insert id="insertArticle" parameterType="org.example.entity.BlogArticle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blog_articles (title, content, summary, author_id, status, view_count, like_count)
        VALUES (#{title}, #{content}, #{summary}, #{authorId}, #{status}, #{viewCount}, #{likeCount})
    </insert>
    
    <update id="updateArticle" parameterType="org.example.entity.BlogArticle">
        UPDATE blog_articles 
        SET title = #{title}, 
            content = #{content}, 
            summary = #{summary}, 
            author_id = #{authorId}, 
            status = #{status},
            view_count = #{viewCount},
            like_count = #{likeCount},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>
    
    <delete id="deleteArticle">
        DELETE FROM blog_articles WHERE id = #{id}
    </delete>
    
</mapper> 